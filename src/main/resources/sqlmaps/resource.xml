<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainy.billing.dao.impl.ResourceDaoImpl" >

    <resultMap type="Resource" id="Resource">
		<id property="id" column="id"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
		<result property="operatorId" column="operator_id"/>
		<result property="name" column="res_name"/>
		<result property="value" column="res_value"/>
		<result property="type" column="res_type"/>
	</resultMap>

	<select id="getEntityById" parameterType="long" resultMap="Resource">
		select *
		from bl_resource where id = #{value}
	</select>
	
	<delete id="deleteEntityById" parameterType="long">
		delete from bl_resource where id = #{value}
	</delete>
	
	<delete id="deleteEntityBatch">
		delete from bl_resource where id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
		#{id}
		</foreach>
	</delete>
	
	<update id="updateEntity" parameterType="Resource">
		update bl_resource
		<set>
			<if test="operatorId!=null">
				operator_id = #{operatorId},
			</if>
			<if test="name!=null">
				res_name = #{name},
			</if>
			<if test="value!=null">
				res_value = #{value},
			</if>
			updated_at = now()
		</set>
		where id = #{id}
	</update>
	
	<insert id="createEntity" parameterType="Resource" useGeneratedKeys="true" keyProperty="id">
		insert into bl_resource (
		created_at, updated_at, res_name, res_value, res_type, operator_id) 
		values 
		(now(), now(), #{name}, #{value}, #{type}, #{operatorId})
	</insert>
	
	<select id="pageQueryEntityCount" parameterType="ResourceVo" resultType="long">
		select count(*) as num
		<include refid="pageQueryEntitySql"/>
	</select>
	
	<select id="pageQueryEntity" parameterType="ResourceVo" resultMap="Resource">
		select *
		<include refid="pageQueryEntitySql"/>
		<include refid="Common.pagingSql"/>
	</select>
	
	<select id="queryResourceRight" parameterType="String" resultType="ResourceRight">
		select 
		res.res_value as resourceUrl, 
		rig.name as rightName 
		from 
		bl_resource res, bl_right rig, bl_resource_right rr 
		where 
		res.id = rr.resource_id and 
		rig.id = rr.right_id and 
		res.res_type = #{value}
	</select>
	
	<select id="queryEntityByRightId" parameterType="long" resultMap="Resource">
		select * from bl_resource as tt 
		where exists 
		(select 1 from bl_resource_right rr 
			where 
			rr.right_id = #{value} and rr.resource_id = tt.id
		)
	</select>
	
	<select id="allEntity"  resultMap="Resource">
		select * from bl_resource
	</select>
	
	<sql id="pageQueryEntitySql">
		from bl_resource as tt
		<where>
			<if test="name!=null">
				and res_name like concat('%', #{name}, '%')
			</if>
			<if test="value!=null">
				and res_value like concat('%', #{value}, '%')
			</if>
		</where>
	</sql>
	
	<delete id="deleteResourceRightRelation" parameterType="map">
		delete from bl_resource_right 
		<where>
			<if test="resourceId != null">
				or resource_id in
				<foreach item="resid" collection="resourceId" open="(" close=")" separator=",">
				#{resid}
				</foreach>
			</if>
			<if test="rightId != null">
				or right_id in 
				<foreach item="rigid" collection="rightId" open="(" close=")" separator=",">
				#{rigid}
				</foreach>
			</if>
		</where> 
	</delete>
	
</mapper>